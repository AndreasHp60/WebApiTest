@page "/Home"

@using TodoListBlazor.Data;
@using Model;

@inject QuestionService questionService

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<PageTitle>ASK-IT</PageTitle>

<div class= "row">
    <div class="col-10">
    <h1>ASK-IT</h1>
    </div>

    <div class="col">
    <a href="/Create" class="btn btn-primary">Create a question</a>
    </div>
</div>

@if (questions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card">
        <h5 class="card-header">Questions</h5>
                @foreach (var question in questions)
        {
            <div class="card-body">
                <div class= "row">
                    <div class="col-11">
                    <h5 class="card-title ">@question.Headline</h5>
                    </div>

                    <div class="col">
                    <p style= "font-weight: bolder;">Rating: @question.Rating</p>
                    </div>
                </div>
                
                <div class= "row">
                    <div class="col-11">
                    <p class="card-text">@question.Question</p>
                    </div>

                    <div class="col">
                    <p class="card-text" style= "font-weight: bolder;" >Categories:</p>
                    </div>
                    </div>
                        @foreach (var category in question.Category)
                            {
                                <div class="card-body">
                                    <p style= "font-weight: bolder;text-align:right">@category.Name</p>
                                </div>
                             }
                    <figcaption class="blockquote-footer">@question.User.Name, @question.Date</figcaption>
                    <a href=@string.Format("{0}",question.QuestionsId) class="btn btn-primary">Watch question</a>
                </div>

        }
    </div>
}



@code {
    private Questions[] questions;

    protected override async Task OnInitializedAsync()
    {
        questions = await questionService.GetQuestionsData();
    }    
}
